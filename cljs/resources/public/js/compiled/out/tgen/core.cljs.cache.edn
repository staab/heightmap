;; Analyzed by ClojureScript 0.0-3297
{:use-macros nil, :excludes #{}, :name tgen.core, :imports nil, :requires {fw figwheel.client, figwheel.client figwheel.client, three three, stats stats, tgen.scene tgen.scene}, :uses {create-scene tgen.scene}, :defs {STATE {:name tgen.core/STATE, :file "src/tgen/core.cljs", :line 11, :column 1, :end-line 11, :end-column 15, :meta {:file "/home/jstaab/Programming/heightmap/cljs/src/tgen/core.cljs", :line 11, :column 10, :end-line 11, :end-column 15}}, start-app {:protocol-inline nil, :meta {:file "/home/jstaab/Programming/heightmap/cljs/src/tgen/core.cljs", :line 13, :column 7, :end-line 13, :end-column 16, :arglists (quote ([]))}, :name tgen.core/start-app, :variadic false, :file "src/tgen/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, stop-app {:protocol-inline nil, :meta {:file "/home/jstaab/Programming/heightmap/cljs/src/tgen/core.cljs", :line 37, :column 7, :end-line 37, :end-column 15, :arglists (quote ([]))}, :name tgen.core/stop-app, :variadic false, :file "src/tgen/core.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:stopper :color :on-jsload :wireframe :renderer :stats}, :order [:stats :renderer :stopper :color :wireframe :on-jsload]}, :doc nil}